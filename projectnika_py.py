# -*- coding: utf-8 -*-
"""projectNika.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vhi8wfYZae1_RKV0NrlfaMEhjOI_2IYZ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import *
from sklearn.linear_model import LinearRegression, Ridge, Lasso, LogisticRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier

df = pd.read_csv('all_data_ivium_new_data.csv')
df.drop(df.columns[-1], axis=1, inplace=True)
df.drop(df.columns[0], axis=1, inplace=True)
df.dropna()
df

data_classification = df.drop(df.columns[-2], axis=1)
data_classification

data_regression = df.drop(df.columns[-1], axis=1)
data_regression

X_data = data_regression.drop(data_regression.columns[-1], axis=1)
y_data = data_regression[data_regression.columns[-1]].values
X_data
X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2, random_state=41)

model = LinearRegression()
model.fit(X_train, y_train)

print(f"MAE on train: ", mean_absolute_error(y_train, model.predict(X_train)))
print(f"MSE on train: ", mean_squared_error(y_train, model.predict(X_train)))
print(f"R2 on train: ", r2_score(y_train, model.predict(X_train)))
print(f"MAE on test: ", mean_absolute_error(y_test, model.predict(X_test)))
print(f"MSE on test: ", mean_squared_error(y_test, model.predict(X_test)))
print(f"R2 on test: ", r2_score(y_test, model.predict(X_test)))